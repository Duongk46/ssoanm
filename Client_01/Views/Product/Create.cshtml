@model Mvc.Areas.Admin.Models.ProductViewModel

@{
    ViewData["Title"] = "Tạo bài viết";
    Layout = "~/Views/Shared/Layout/_Layout.cshtml";
    var ListCategory = (SelectList)ViewData["IDCategory"];
}
@section js{
    <script src="https://cdn.ckeditor.com/ckeditor5/35.4.0/classic/ckeditor.js"></script>
    <script>
        ClassicEditor
            .create(document.querySelector('#editor'))
            .catch(error => {
                console.error(error);
            });
    </script>
}
<div class="container">
    <div class="card card__pd">
        <div class="col-md-12">
            @using (Html.BeginForm("", "", FormMethod.Post, new { action = "/Product/Create", @enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-horizontal">
                    <h4>@ViewBag.Title</h4>           
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @if (ViewBag.Message != null)
                    {
                        <div class="alert alert-danger">@ViewBag.Message</div>
                    }
                    <div class="form-group mt-4">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                        <div class="form-width-txt">
                            @Html.TextBoxFor(model => model.Name, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group mt-4">
                        @Html.LabelFor(model => model.IDCategory, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.DropDownListFor(model => model.IDCategory, ListCategory, htmlAttributes: new { @class = "form-control w-25" })
                            @Html.ValidationMessageFor(model => model.IDCategory, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group mt-4">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label " })
                        <div>
                            @Html.TextAreaFor(model => model.Description, htmlAttributes: new { @class = "form-control" ,@id="editor"})
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group mt-4">
                        @Html.LabelFor(model => model.FileContent, htmlAttributes: new { @class = "control-label " })
                        <div>
                            @Html.TextBoxFor(model => model.FileContent, htmlAttributes: new { @class = "form-control" ,@type="file"})
                            @Html.ValidationMessageFor(model => model.FileContent, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group mt-4">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label " })
                        <div>
                            @Html.CheckBoxFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group mt-4">
                        <div class="col-md-offset-2">
                            <input type="submit" value="Tạo mới" class="btn btn-success" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

